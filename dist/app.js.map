{"version":3,"sources":["../app.js"],"names":["express","require","morgan","cors","path","history","mongoose","app","uri","options","useNewUrlParser","useCreateIndex","useUnifiedTopology","connect","then","console","log","err","use","json","urlencoded","extended","join","__dirname","get","req","res","send","set","process","env","PORT","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,8BAAD,CAAvB;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMM,GAAG,GAAGP,OAAO,EAAnB;AACA,IAAMQ,GAAG,GAAG,wCAAZ;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,eAAe,EAAE,IADL;AAEZC,EAAAA,cAAc,EAAE,IAFJ;AAGZC,EAAAA,kBAAkB,EAAE;AAHR,CAAhB,C,CAMA;;AACAN,QAAQ,CAACO,OAAT,CAAiBL,GAAjB,EAAsBC,OAAtB,EAA+BK,IAA/B,CACI,YAAM;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,CAHL,EAII,UAAAC,GAAG,EAAI;AACHA,EAAAA,GAAG;AACN,CANL,E,CASA;;AACAV,GAAG,CAACW,GAAJ,CAAQhB,MAAM,CAAC,MAAD,CAAd;AACAK,GAAG,CAACW,GAAJ,CAAQf,IAAI,EAAZ;AACAI,GAAG,CAACW,GAAJ,CAAQlB,OAAO,CAACmB,IAAR,EAAR;AACAZ,GAAG,CAACW,GAAJ,CAAQlB,OAAO,CAACoB,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR,E,CAEA;AACA;;AACAd,GAAG,CAACW,GAAJ,CAAQlB,OAAO,UAAP,CAAeI,IAAI,CAACkB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAhB,GAAG,CAACW,GAAJ,CAAQb,OAAO,EAAf,E,CAEA;;AACAE,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACH,CAFD,E,CAIA;;AACApB,GAAG,CAACqB,GAAJ,CAAQ,QAAR,EAAkBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC;AAEAxB,GAAG,CAACyB,MAAJ,CAAWzB,GAAG,CAACiB,GAAJ,CAAQ,QAAR,CAAX,EAA8B,YAAM;AAC5BT,EAAAA,OAAO,CAACC,GAAR,oDAAwDT,GAAG,CAACiB,GAAJ,CAAQ,QAAR,CAAxD;AACP,CAFD","sourcesContent":["const express = require('express')\r\nconst morgan = require('morgan')\r\nconst cors = require('cors')\r\nconst path = require('path')\r\nconst history = require('connect-history-api-fallback');\r\nconst mongoose = require('mongoose')\r\n\r\nconst app = express()\r\nconst uri = 'mongodb://localhost:27017/backend-node'\r\n\r\nconst options = {\r\n    useNewUrlParser: true,\r\n    useCreateIndex: true,\r\n    useUnifiedTopology: true\r\n}\r\n\r\n// Conexión a MongoDB\r\nmongoose.connect(uri, options).then(\r\n    () => {\r\n        console.log('Conectó con MongoDB')\r\n    },\r\n    err => {\r\n        err\r\n    }\r\n)\r\n\r\n// Middleware\r\napp.use(morgan('tiny'))\r\napp.use(cors())\r\napp.use(express.json())\r\napp.use(express.urlencoded({extended:true}))\r\n\r\n// Middleware para Vue.js router modo history\r\n// eslint-disable-next-line no-undef\r\napp.use(express.static(path.join(__dirname, 'public')))\r\napp.use(history())\r\n\r\n// Rutas\r\napp.get('/', (req, res) => {\r\n    res.send('hola mundo!')\r\n})\r\n\r\n// eslint-disable-next-line no-undef\r\napp.set('puerto', process.env.PORT || 3000)\r\n\r\napp.listen(app.get('puerto'), () => {\r\n        console.log(`Escuchando en el puerto http://localhost:${app.get('puerto')}`)\r\n})"],"file":"app.js"}